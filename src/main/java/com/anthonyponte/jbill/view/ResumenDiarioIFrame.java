/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JInternalFrame.java to edit this template
 */
package com.anthonyponte.jbill.view;

import com.anthonyponte.jbill.filter.IntegerFilter;
import com.anthonyponte.jbill.filter.SerieFilter;
import com.anthonyponte.jbill.model.TipoDocumentoIdentidad;
import com.anthonyponte.jbill.model.Estado;
import com.anthonyponte.jbill.model.Moneda;
import com.anthonyponte.jbill.model.RegimenPercepcion;
import com.anthonyponte.jbill.model.TipoDocumento;
import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import java.text.DecimalFormat;
import java.text.SimpleDateFormat;
import javax.swing.DefaultComboBoxModel;
import javax.swing.DefaultListCellRenderer;
import javax.swing.GroupLayout;
import javax.swing.JButton;
import javax.swing.JCheckBox;
import javax.swing.JComboBox;
import javax.swing.JFormattedTextField;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JList;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JSeparator;
import javax.swing.JTabbedPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.LayoutStyle;
import javax.swing.ListSelectionModel;
import javax.swing.table.DefaultTableModel;
import javax.swing.text.AbstractDocument;
import javax.swing.text.DefaultFormatterFactory;
import javax.swing.text.NumberFormatter;
import org.jdesktop.swingx.JXDatePicker;
import org.kordamp.ikonli.remixicon.RemixiconAL;
import org.kordamp.ikonli.remixicon.RemixiconMZ;
import org.kordamp.ikonli.swing.FontIcon;

/**
 *
 * @author anthony
 */
public class ResumenDiarioIFrame extends JInternalFrame {

    /**
     * Creates new form VoidedDocumentsIFrame
     */
    public ResumenDiarioIFrame() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabbed = new JTabbedPane();
        pnlEncabezado = new JPanel();
        lblTipo = new JLabel();
        lblSerie = new JLabel();
        tfSerie = new JTextField();
        lblCorrelativo = new JLabel();
        tfCorrelativo = new JTextField();
        lblFechaGeneracion = new JLabel();
        lblFechaEmision = new JLabel();
        dpFechaEmision = new JXDatePicker();
        dpFechaGeneracion = new JXDatePicker();
        cbxTipo = new JComboBox<>();
        pnlDetalle = new JPanel();
        lblEstado = new JLabel();
        cbxEstado = new JComboBox<>();
        tbbdDetalle = new JTabbedPane();
        pnlDocumento = new JPanel();
        lblDocumentoTipo = new JLabel();
        cbxDocumentoTipo = new JComboBox<>();
        lblDocumentoSerie = new JLabel();
        tfDocumentoSerie = new JTextField();
        lblDocumentoCorrelativo = new JLabel();
        tfDocumentoCorrelativo = new JTextField();
        pnlRemitente = new JPanel();
        lblDocumentoIdentidadTipo = new JLabel();
        cbxDocumentoIdentidadTipo = new JComboBox<>();
        lblDocumentoIdentidadNumero = new JLabel();
        tfDocumentoIdentidadNumero = new JTextField();
        pnlReferencia = new JPanel();
        lblReferenciaTipo = new JLabel();
        cbxDocumentoReferenciaTipo = new JComboBox<>();
        lblReferenciaSerie = new JLabel();
        tfDocumentoReferenciaSerie = new JTextField();
        lblReferenciaCorrelativo = new JLabel();
        tfDocumentoReferenciaCorrelativo = new JTextField();
        spnImportes = new JScrollPane();
        pnlImportes = new JPanel();
        chckPercepcion = new JCheckBox();
        lblMoneda = new JLabel();
        cbxMoneda = new JComboBox<>();
        lblImporteTotal = new JLabel();
        tfImporteTotal = new JFormattedTextField();
        lblGravadas = new JLabel();
        tfGravadas = new JFormattedTextField();
        lblExoneradas = new JLabel();
        tfExoneradas = new JFormattedTextField();
        lblInafectas = new JLabel();
        tfInafectas = new JFormattedTextField();
        lblGratuitas = new JLabel();
        tfGratuitas = new JFormattedTextField();
        lblExportacion = new JLabel();
        tfExportacion = new JFormattedTextField();
        lblOtrosCargos = new JLabel();
        tfOtrosCargos = new JFormattedTextField();
        lblIgv = new JLabel();
        tfIgv = new JFormattedTextField();
        lblIsc = new JLabel();
        tfIsc = new JFormattedTextField();
        lblOtrosTributos = new JLabel();
        tfOtrosTributos = new JFormattedTextField();
        lblBolsasPlasticas = new JLabel();
        tfBolsasPlasticas = new JFormattedTextField();
        spnPercepcion = new JScrollPane();
        pnlPercepcion = new JPanel();
        cbxPercepcionRegimen = new JComboBox<>();
        lblPercepcionRegimen = new JLabel();
        lblPercepcionTasa = new JLabel();
        tfPercepcionMonto = new JFormattedTextField();
        lblPercepcionMonto = new JLabel();
        tfPercepcionMontoTotal = new JFormattedTextField();
        lblPercepcionMontoTotal = new JLabel();
        tfPercepcionBase = new JFormattedTextField();
        lblPercepcionBase = new JLabel();
        tfPercepcionTasa = new JFormattedTextField();
        btnAgregar = new JButton();
        btnEliminar = new JButton();
        spane = new JScrollPane();
        table = new JTable();
        separator = new JSeparator();
        btnNuevo = new JButton();
        btnGuardar = new JButton();
        btnLimpiar = new JButton();

        setClosable(true);
        setIconifiable(true);
        setTitle("Resumen diario");
        setFrameIcon(FontIcon.of(RemixiconAL.ADD_LINE, 16, Color.decode("#f7d117")));
        setMaximumSize(null);

        tabbed.setMaximumSize(null);

        pnlEncabezado.setMaximumSize(null);

        lblTipo.setFont(lblTipo.getFont().deriveFont(lblTipo.getFont().getStyle() | Font.BOLD, lblTipo.getFont().getSize()-2));
        lblTipo.setText("Tipo");

        lblSerie.setFont(lblSerie.getFont().deriveFont(lblSerie.getFont().getStyle() | Font.BOLD, lblSerie.getFont().getSize()-2));
        lblSerie.setText("Serie");

        tfSerie.setEnabled(false);
        tfSerie.setMaximumSize(null);
        tfSerie.setMinimumSize(null);
        tfSerie.setPreferredSize(new Dimension(150, 30));

        lblCorrelativo.setFont(lblCorrelativo.getFont().deriveFont(lblCorrelativo.getFont().getStyle() | Font.BOLD, lblCorrelativo.getFont().getSize()-2));
        lblCorrelativo.setText("Correlativo");
        lblCorrelativo.setName(""); // NOI18N

        tfCorrelativo.setEnabled(false);
        tfCorrelativo.setMaximumSize(null);
        tfCorrelativo.setMinimumSize(null);
        tfCorrelativo.setPreferredSize(new Dimension(150, 30));

        lblFechaGeneracion.setFont(lblFechaGeneracion.getFont().deriveFont(lblFechaGeneracion.getFont().getStyle() | Font.BOLD, lblFechaGeneracion.getFont().getSize()-2));
        lblFechaGeneracion.setText("Fecha generacion");

        lblFechaEmision.setFont(lblFechaEmision.getFont().deriveFont(lblFechaEmision.getFont().getStyle() | Font.BOLD, lblFechaEmision.getFont().getSize()-2));
        lblFechaEmision.setText("Fecha emision");

        dpFechaEmision.setEnabled(false);
        dpFechaEmision.setFormats(new SimpleDateFormat("d MMMM y"));
        dpFechaEmision.setMaximumSize(null);
        dpFechaEmision.setMinimumSize(null);
        dpFechaEmision.setPreferredSize(new Dimension(150, 30));
        dpFechaEmision.getEditor().setEditable(false);

        dpFechaGeneracion.setEditable(false);
        dpFechaGeneracion.setEnabled(false);
        dpFechaGeneracion.setFormats(new SimpleDateFormat("d MMMM y"));
        dpFechaGeneracion.setMaximumSize(null);
        dpFechaGeneracion.setMinimumSize(null);
        dpFechaGeneracion.setPreferredSize(new Dimension(150, 30));

        cbxTipo.setModel(new DefaultComboBoxModel(new TipoDocumento[] {
            new TipoDocumento("RC", "Resumen Diario")
        }));
        cbxTipo.setEnabled(false);
        cbxTipo.setMaximumSize(null);
        cbxTipo.setPreferredSize(new Dimension(150, 30));
        cbxTipo.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(
                JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof TipoDocumento) {
                    TipoDocumento tipoDocumento = (TipoDocumento) value;
                    setText(tipoDocumento.getDescripcion());
                }
                return this;
            }
        });

        GroupLayout pnlEncabezadoLayout = new GroupLayout(pnlEncabezado);
        pnlEncabezado.setLayout(pnlEncabezadoLayout);
        pnlEncabezadoLayout.setHorizontalGroup(pnlEncabezadoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlEncabezadoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(tfSerie, GroupLayout.DEFAULT_SIZE, 450, Short.MAX_VALUE)
                    .addComponent(tfCorrelativo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblTipo)
                    .addComponent(lblSerie)
                    .addComponent(lblCorrelativo)
                    .addComponent(lblFechaGeneracion)
                    .addComponent(lblFechaEmision)
                    .addComponent(dpFechaEmision, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(dpFechaGeneracion, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbxTipo, GroupLayout.Alignment.TRAILING, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlEncabezadoLayout.setVerticalGroup(pnlEncabezadoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlEncabezadoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblTipo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxTipo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblSerie)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfSerie, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblCorrelativo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfCorrelativo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFechaGeneracion)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpFechaGeneracion, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblFechaEmision)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(dpFechaEmision, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cbxTipo.setSelectedIndex(-1);

        tabbed.addTab("Encabezado", FontIcon.of(RemixiconAL.FILE_LIST_LINE, 16, Color.decode("#FFFFFF")), pnlEncabezado, "");

        pnlDetalle.setMaximumSize(null);

        lblEstado.setFont(lblEstado.getFont().deriveFont(lblEstado.getFont().getStyle() | Font.BOLD, lblEstado.getFont().getSize()-2));
        lblEstado.setText("Estado *");

        cbxEstado.setModel(new DefaultComboBoxModel(new Estado[] {
            new Estado("1", "Adicionar"),
            new Estado("2", "Modificar"),
            new Estado("3", "Anulado")
        }));
        cbxEstado.setEnabled(false);
        cbxEstado.setMaximumSize(null);
        cbxEstado.setPreferredSize(new Dimension(150, 30));
        cbxEstado.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(
                JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof Estado) {
                    Estado estado = (Estado) value;
                    setText(estado.getDescripcion());
                }
                return this;
            }
        });

        lblDocumentoTipo.setFont(lblDocumentoTipo.getFont().deriveFont(lblDocumentoTipo.getFont().getStyle() | Font.BOLD, lblDocumentoTipo.getFont().getSize()-2));
        lblDocumentoTipo.setText("Tipo *");

        cbxDocumentoTipo.setModel(new DefaultComboBoxModel(new TipoDocumento[] {
            new TipoDocumento("03", "Boleta de venta"),
            new TipoDocumento("07", "Nota de crédito - boleta de venta"),
            new TipoDocumento("08", "Nota de débito - boleta de venta")
        }));
        cbxDocumentoTipo.setEnabled(false);
        cbxDocumentoTipo.setMaximumSize(null);
        cbxDocumentoTipo.setPreferredSize(new Dimension(150, 30));
        cbxDocumentoTipo.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(
                JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof TipoDocumento) {
                    TipoDocumento tipoDocumento = (TipoDocumento) value;
                    setText(tipoDocumento.getDescripcion());
                }
                return this;
            }
        });

        lblDocumentoSerie.setFont(lblDocumentoSerie.getFont().deriveFont(lblDocumentoSerie.getFont().getStyle() | Font.BOLD, lblDocumentoSerie.getFont().getSize()-2));
        lblDocumentoSerie.setText("Serie *");

        tfDocumentoSerie.setEnabled(false);
        tfDocumentoSerie.setMaximumSize(null);
        tfDocumentoSerie.setMinimumSize(null);
        tfDocumentoSerie.setPreferredSize(new Dimension(150, 30));
        AbstractDocument adDocumentoSerie = (AbstractDocument) tfDocumentoSerie.getDocument();
        adDocumentoSerie.setDocumentFilter(new SerieFilter('B'));

        lblDocumentoCorrelativo.setFont(lblDocumentoCorrelativo.getFont().deriveFont(lblDocumentoCorrelativo.getFont().getStyle() | Font.BOLD, lblDocumentoCorrelativo.getFont().getSize()-2));
        lblDocumentoCorrelativo.setText("Correlativo *");

        tfDocumentoCorrelativo.setEnabled(false);
        tfDocumentoCorrelativo.setMaximumSize(null);
        tfDocumentoCorrelativo.setMinimumSize(null);
        tfDocumentoCorrelativo.setPreferredSize(new Dimension(150, 30));
        AbstractDocument adDocumentoCorrelativo = (AbstractDocument) tfDocumentoCorrelativo.getDocument();
        adDocumentoCorrelativo.setDocumentFilter(new IntegerFilter(8));

        GroupLayout pnlDocumentoLayout = new GroupLayout(pnlDocumento);
        pnlDocumento.setLayout(pnlDocumentoLayout);
        pnlDocumentoLayout.setHorizontalGroup(pnlDocumentoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlDocumentoLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlDocumentoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cbxDocumentoTipo, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfDocumentoSerie, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDocumentoTipo)
                    .addComponent(lblDocumentoSerie)
                    .addComponent(lblDocumentoCorrelativo)
                    .addComponent(tfDocumentoCorrelativo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlDocumentoLayout.setVerticalGroup(pnlDocumentoLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlDocumentoLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDocumentoTipo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxDocumentoTipo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDocumentoSerie)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDocumentoSerie, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDocumentoCorrelativo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDocumentoCorrelativo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cbxDocumentoTipo.setSelectedIndex(-1);

        tbbdDetalle.addTab("Documento", pnlDocumento);

        lblDocumentoIdentidadTipo.setFont(lblDocumentoIdentidadTipo.getFont().deriveFont(lblDocumentoIdentidadTipo.getFont().getStyle() | Font.BOLD, lblDocumentoIdentidadTipo.getFont().getSize()-2));
        lblDocumentoIdentidadTipo.setText("Documento identidad *");

        cbxDocumentoIdentidadTipo.setModel(new DefaultComboBoxModel(new TipoDocumentoIdentidad[] {
            new TipoDocumentoIdentidad("0", "DOC.TRIB.NO.DOM.SIN.RUC"),
            new TipoDocumentoIdentidad("1", "Documento Nacional de Identidad"),
            new TipoDocumentoIdentidad("4", "Carnet de extranjería"),
            new TipoDocumentoIdentidad("6", "Registro Unico de Contributentes")
        }));
        cbxDocumentoIdentidadTipo.setEnabled(false);
        cbxDocumentoIdentidadTipo.setMaximumSize(null);
        cbxDocumentoIdentidadTipo.setName(""); // NOI18N
        cbxDocumentoIdentidadTipo.setPreferredSize(new Dimension(150, 30));
        cbxDocumentoIdentidadTipo.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(
                JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof TipoDocumentoIdentidad) {
                    TipoDocumentoIdentidad documentoIdentidad = (TipoDocumentoIdentidad) value;
                    setText(documentoIdentidad.getDescripcion());
                }
                return this;
            }
        });

        lblDocumentoIdentidadNumero.setFont(lblDocumentoIdentidadNumero.getFont().deriveFont(lblDocumentoIdentidadNumero.getFont().getStyle() | Font.BOLD, lblDocumentoIdentidadNumero.getFont().getSize()-2));
        lblDocumentoIdentidadNumero.setText("Numero *");

        tfDocumentoIdentidadNumero.setEnabled(false);
        tfDocumentoIdentidadNumero.setMaximumSize(null);
        tfDocumentoIdentidadNumero.setMinimumSize(null);
        tfDocumentoIdentidadNumero.setPreferredSize(new Dimension(150, 30));

        GroupLayout pnlRemitenteLayout = new GroupLayout(pnlRemitente);
        pnlRemitente.setLayout(pnlRemitenteLayout);
        pnlRemitenteLayout.setHorizontalGroup(pnlRemitenteLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlRemitenteLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlRemitenteLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cbxDocumentoIdentidadTipo, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblDocumentoIdentidadTipo)
                    .addComponent(lblDocumentoIdentidadNumero)
                    .addComponent(tfDocumentoIdentidadNumero, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlRemitenteLayout.setVerticalGroup(pnlRemitenteLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlRemitenteLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblDocumentoIdentidadTipo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxDocumentoIdentidadTipo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblDocumentoIdentidadNumero)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDocumentoIdentidadNumero, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cbxDocumentoIdentidadTipo.setSelectedIndex(-1);

        tbbdDetalle.addTab("Remitente", pnlRemitente);

        lblReferenciaTipo.setFont(lblReferenciaTipo.getFont().deriveFont(lblReferenciaTipo.getFont().getStyle() | Font.BOLD, lblReferenciaTipo.getFont().getSize()-2));
        lblReferenciaTipo.setText("Tipo *");

        cbxDocumentoReferenciaTipo.setModel(new DefaultComboBoxModel(new TipoDocumento[] {
            new TipoDocumento("03", "Boleta de venta"),
            new TipoDocumento("12", "Ticket de máquina registradora")
        }));
        cbxDocumentoReferenciaTipo.setEnabled(false);
        cbxDocumentoReferenciaTipo.setMaximumSize(null);
        cbxDocumentoReferenciaTipo.setPreferredSize(new Dimension(150, 30));
        cbxDocumentoReferenciaTipo.setRenderer(new DefaultListCellRenderer(){
            @Override
            public Component getListCellRendererComponent(
                JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
                super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
                if (value instanceof TipoDocumento) {
                    TipoDocumento tipoDocumento = (TipoDocumento) value;
                    setText(tipoDocumento.getDescripcion());
                }
                return this;
            }
        });

        lblReferenciaSerie.setFont(lblReferenciaSerie.getFont().deriveFont(lblReferenciaSerie.getFont().getStyle() | Font.BOLD, lblReferenciaSerie.getFont().getSize()-2));
        lblReferenciaSerie.setText("Serie *");

        tfDocumentoReferenciaSerie.setEnabled(false);
        tfDocumentoReferenciaSerie.setMaximumSize(null);
        tfDocumentoReferenciaSerie.setMinimumSize(null);
        tfDocumentoReferenciaSerie.setPreferredSize(new Dimension(150, 30));
        AbstractDocument adReferenciaSerie = (AbstractDocument) tfDocumentoReferenciaSerie.getDocument();
        adReferenciaSerie.setDocumentFilter(new SerieFilter('B'));

        lblReferenciaCorrelativo.setFont(lblReferenciaCorrelativo.getFont().deriveFont(lblReferenciaCorrelativo.getFont().getStyle() | Font.BOLD, lblReferenciaCorrelativo.getFont().getSize()-2));
        lblReferenciaCorrelativo.setText("Correlativo *");

        tfDocumentoReferenciaCorrelativo.setEnabled(false);
        tfDocumentoReferenciaCorrelativo.setMaximumSize(null);
        tfDocumentoReferenciaCorrelativo.setMinimumSize(null);
        tfDocumentoReferenciaCorrelativo.setPreferredSize(new Dimension(150, 30));
        AbstractDocument adReferenciaCorrelativo = (AbstractDocument) tfDocumentoReferenciaCorrelativo.getDocument();
        adReferenciaCorrelativo.setDocumentFilter(new IntegerFilter(8));

        GroupLayout pnlReferenciaLayout = new GroupLayout(pnlReferencia);
        pnlReferencia.setLayout(pnlReferenciaLayout);
        pnlReferenciaLayout.setHorizontalGroup(pnlReferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlReferenciaLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(pnlReferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                    .addComponent(cbxDocumentoReferenciaTipo, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(tfDocumentoReferenciaSerie, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblReferenciaTipo)
                    .addComponent(lblReferenciaSerie)
                    .addComponent(lblReferenciaCorrelativo)
                    .addComponent(tfDocumentoReferenciaCorrelativo, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        pnlReferenciaLayout.setVerticalGroup(pnlReferenciaLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
            .addGroup(pnlReferenciaLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(lblReferenciaTipo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cbxDocumentoReferenciaTipo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblReferenciaSerie)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDocumentoReferenciaSerie, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lblReferenciaCorrelativo)
                .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(tfDocumentoReferenciaCorrelativo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        cbxDocumentoReferenciaTipo.setSelectedIndex(-1);

        tbbdDetalle.addTab("Referencia", pnlReferencia);

        spnImportes.setBorder(null);
        spnImportes.setMaximumSize(null);
        spnImportes.setMinimumSize(null);
        spnImportes.setPreferredSize(new Dimension(438, 200));

        pnlImportes.setMaximumSize(null);

        chckPercepcion.setText("Percepcion");
        chckPercepcion.setEnabled(false);

        lblMoneda.setFont(lblMoneda.getFont().deriveFont(lblMoneda.getFont().getStyle() | Font.BOLD, lblMoneda.getFont().getSize()-2));
        lblMoneda.setText("Moneda *");

        cbxMoneda.setModel(new DefaultComboBoxModel(new Moneda[] {
            new Moneda("PEN", "Soles"),
            new Moneda("USD", "Dolares")}));
cbxMoneda.setEnabled(false);
cbxMoneda.setMaximumSize(null);
cbxMoneda.setMinimumSize(null);
cbxMoneda.setPreferredSize(new Dimension(150, 30));
cbxMoneda.setRenderer(new DefaultListCellRenderer(){
    @Override
    public Component getListCellRendererComponent(
        JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
        super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
        if (value instanceof Moneda) {
            Moneda moneda = (Moneda) value;
            setText(moneda.getDescripcion());
        }
        return this;
    }
    });

    lblImporteTotal.setFont(lblImporteTotal.getFont().deriveFont(lblImporteTotal.getFont().getStyle() | Font.BOLD, lblImporteTotal.getFont().getSize()-2));
    lblImporteTotal.setText("Importe total *");

    tfImporteTotal.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfImporteTotal.setEnabled(false);
    tfImporteTotal.setPreferredSize(new Dimension(150, 30));

    lblGravadas.setFont(lblGravadas.getFont().deriveFont(lblGravadas.getFont().getStyle() | Font.BOLD, lblGravadas.getFont().getSize()-2));
    lblGravadas.setText("Gravadas");

    tfGravadas.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfGravadas.setEnabled(false);
    tfGravadas.setPreferredSize(new Dimension(150, 30));

    lblExoneradas.setFont(lblExoneradas.getFont().deriveFont(lblExoneradas.getFont().getStyle() | Font.BOLD, lblExoneradas.getFont().getSize()-2));
    lblExoneradas.setText("Exoneradas");

    tfExoneradas.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfExoneradas.setEnabled(false);
    tfExoneradas.setPreferredSize(new Dimension(150, 30));

    lblInafectas.setFont(lblInafectas.getFont().deriveFont(lblInafectas.getFont().getStyle() | Font.BOLD, lblInafectas.getFont().getSize()-2));
    lblInafectas.setText("Inafectas");

    tfInafectas.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfInafectas.setEnabled(false);
    tfInafectas.setPreferredSize(new Dimension(150, 30));

    lblGratuitas.setFont(lblGratuitas.getFont().deriveFont(lblGratuitas.getFont().getStyle() | Font.BOLD, lblGratuitas.getFont().getSize()-2));
    lblGratuitas.setText("Gratuitas");

    tfGratuitas.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfGratuitas.setEnabled(false);
    tfGratuitas.setPreferredSize(new Dimension(150, 30));

    lblExportacion.setFont(lblExportacion.getFont().deriveFont(lblExportacion.getFont().getStyle() | Font.BOLD, lblExportacion.getFont().getSize()-2));
    lblExportacion.setText("Exportacion");

    tfExportacion.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfExportacion.setEnabled(false);
    tfExportacion.setPreferredSize(new Dimension(150, 30));

    lblOtrosCargos.setFont(lblOtrosCargos.getFont().deriveFont(lblOtrosCargos.getFont().getStyle() | Font.BOLD, lblOtrosCargos.getFont().getSize()-2));
    lblOtrosCargos.setText("Otros cargos");

    tfOtrosCargos.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfOtrosCargos.setEnabled(false);
    tfOtrosCargos.setPreferredSize(new Dimension(150, 30));

    lblIgv.setFont(lblIgv.getFont().deriveFont(lblIgv.getFont().getStyle() | Font.BOLD, lblIgv.getFont().getSize()-2));
    lblIgv.setText("IGV *");

    tfIgv.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfIgv.setEnabled(false);
    tfIgv.setPreferredSize(new Dimension(150, 30));

    lblIsc.setFont(lblIsc.getFont().deriveFont(lblIsc.getFont().getStyle() | Font.BOLD, lblIsc.getFont().getSize()-2));
    lblIsc.setText("ISC");

    tfIsc.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfIsc.setEnabled(false);
    tfIsc.setPreferredSize(new Dimension(150, 30));

    lblOtrosTributos.setFont(lblOtrosTributos.getFont().deriveFont(lblOtrosTributos.getFont().getStyle() | Font.BOLD, lblOtrosTributos.getFont().getSize()-2));
    lblOtrosTributos.setText("Otros tributos");

    tfOtrosTributos.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfOtrosTributos.setEnabled(false);
    tfOtrosTributos.setPreferredSize(new Dimension(150, 30));

    lblBolsasPlasticas.setFont(lblBolsasPlasticas.getFont().deriveFont(lblBolsasPlasticas.getFont().getStyle() | Font.BOLD, lblBolsasPlasticas.getFont().getSize()-2));
    lblBolsasPlasticas.setText("Bolsas plasticas");

    tfBolsasPlasticas.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfBolsasPlasticas.setEnabled(false);
    tfBolsasPlasticas.setPreferredSize(new Dimension(150, 30));

        GroupLayout pnlImportesLayout = new GroupLayout(pnlImportes);
    pnlImportes.setLayout(pnlImportesLayout);
    pnlImportesLayout.setHorizontalGroup(pnlImportesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(pnlImportesLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(pnlImportesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(chckPercepcion)
                .addComponent(lblImporteTotal)
                .addComponent(lblGravadas)
                .addComponent(lblExoneradas)
                .addComponent(lblInafectas)
                .addComponent(lblGratuitas)
                .addComponent(lblExportacion)
                .addComponent(lblOtrosCargos)
                .addComponent(lblIgv)
                .addComponent(lblIsc)
                .addComponent(lblOtrosTributos)
                .addComponent(lblBolsasPlasticas)
                .addComponent(lblMoneda)
                .addComponent(cbxMoneda, 0, 236, Short.MAX_VALUE)
                .addComponent(tfGravadas, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfExoneradas, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfInafectas, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfOtrosCargos, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfGratuitas, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfImporteTotal, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfExportacion, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfIgv, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfIsc, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfOtrosTributos, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfBolsasPlasticas, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    pnlImportesLayout.setVerticalGroup(pnlImportesLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(pnlImportesLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(chckPercepcion)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblMoneda)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cbxMoneda, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblImporteTotal)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfImporteTotal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblGravadas)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfGravadas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblExoneradas)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfExoneradas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblInafectas)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfInafectas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblGratuitas)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfGratuitas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblExportacion)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfExportacion, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblOtrosCargos)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfOtrosCargos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblIgv)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfIgv, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblIsc)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfIsc, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblOtrosTributos)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfOtrosTributos, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblBolsasPlasticas)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfBolsasPlasticas, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    cbxMoneda.setSelectedIndex(-1);

    spnImportes.setViewportView(pnlImportes);

    tbbdDetalle.addTab("Importes", spnImportes);

    spnPercepcion.setBorder(null);
    spnPercepcion.setMaximumSize(null);
    spnPercepcion.setMinimumSize(null);
    spnPercepcion.setPreferredSize(new Dimension(450, 200));

    pnlPercepcion.setMaximumSize(null);

    cbxPercepcionRegimen.setModel(new DefaultComboBoxModel(new RegimenPercepcion[] {
        new RegimenPercepcion("01", "Percepción Venta Interna", 2),
        new RegimenPercepcion("02", "Percepción a la adquisición de combustible", 1),
        new RegimenPercepcion("03", "Percepción realizada al agente de percepción con tasa especial", 0.5)
    }));
    cbxPercepcionRegimen.setEnabled(false);
    cbxPercepcionRegimen.setMaximumSize(null);
    cbxPercepcionRegimen.setPreferredSize(new Dimension(150, 30));
    cbxPercepcionRegimen.setRenderer(new DefaultListCellRenderer(){
        @Override
        public Component getListCellRendererComponent(
            JList<?> list, Object value, int index, boolean isSelected, boolean cellHasFocus) {
            super.getListCellRendererComponent(list, value, index, isSelected, cellHasFocus);
            if (value instanceof RegimenPercepcion) {
                RegimenPercepcion regimenPercepcion = (RegimenPercepcion) value;
                setText(regimenPercepcion.getDescripcion());
            }
            return this;
        }
    });

    lblPercepcionRegimen.setFont(lblPercepcionRegimen.getFont().deriveFont(lblPercepcionRegimen.getFont().getStyle() | Font.BOLD, lblPercepcionRegimen.getFont().getSize()-2));
    lblPercepcionRegimen.setText("Regimen *");

    lblPercepcionTasa.setFont(lblPercepcionTasa.getFont().deriveFont(lblPercepcionTasa.getFont().getStyle() | Font.BOLD, lblPercepcionTasa.getFont().getSize()-2));
    lblPercepcionTasa.setText("Tasa *");

    tfPercepcionMonto.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfPercepcionMonto.setEnabled(false);
    tfPercepcionMonto.setMaximumSize(null);
    tfPercepcionMonto.setMinimumSize(null);
    tfPercepcionMonto.setPreferredSize(new Dimension(150, 30));

    lblPercepcionMonto.setFont(lblPercepcionMonto.getFont().deriveFont(lblPercepcionMonto.getFont().getStyle() | Font.BOLD, lblPercepcionMonto.getFont().getSize()-2));
    lblPercepcionMonto.setText("Monto *");

    tfPercepcionMontoTotal.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfPercepcionMontoTotal.setEnabled(false);
    tfPercepcionMontoTotal.setMaximumSize(null);
    tfPercepcionMontoTotal.setMinimumSize(null);
    tfPercepcionMontoTotal.setPreferredSize(new Dimension(150, 30));

    lblPercepcionMontoTotal.setFont(lblPercepcionMontoTotal.getFont().deriveFont(lblPercepcionMontoTotal.getFont().getStyle() | Font.BOLD, lblPercepcionMontoTotal.getFont().getSize()-2));
    lblPercepcionMontoTotal.setText("Monto total *");

    tfPercepcionBase.setFormatterFactory(new DefaultFormatterFactory(new NumberFormatter(new DecimalFormat("#0.00"))));
    tfPercepcionBase.setEnabled(false);
    tfPercepcionBase.setMaximumSize(null);
    tfPercepcionBase.setMinimumSize(null);
    tfPercepcionBase.setPreferredSize(new Dimension(150, 30));

    lblPercepcionBase.setFont(lblPercepcionBase.getFont().deriveFont(lblPercepcionBase.getFont().getStyle() | Font.BOLD, lblPercepcionBase.getFont().getSize()-2));
    lblPercepcionBase.setText("Base *");

    tfPercepcionTasa.setEnabled(false);
    tfPercepcionTasa.setPreferredSize(new Dimension(150, 30));

        GroupLayout pnlPercepcionLayout = new GroupLayout(pnlPercepcion);
    pnlPercepcion.setLayout(pnlPercepcionLayout);
    pnlPercepcionLayout.setHorizontalGroup(pnlPercepcionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(pnlPercepcionLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(pnlPercepcionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(lblPercepcionRegimen)
                .addComponent(lblPercepcionTasa)
                .addComponent(lblPercepcionMonto)
                .addComponent(lblPercepcionMontoTotal)
                .addComponent(lblPercepcionBase)
                .addComponent(cbxPercepcionRegimen, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfPercepcionMonto, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfPercepcionMontoTotal, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfPercepcionBase, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tfPercepcionTasa, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap())
    );
    pnlPercepcionLayout.setVerticalGroup(pnlPercepcionLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(pnlPercepcionLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblPercepcionRegimen)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cbxPercepcionRegimen, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblPercepcionTasa)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfPercepcionTasa, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblPercepcionMonto)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfPercepcionMonto, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblPercepcionMontoTotal)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfPercepcionMontoTotal, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addComponent(lblPercepcionBase)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tfPercepcionBase, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addContainerGap())
    );

    cbxPercepcionRegimen.setSelectedIndex(-1);

    spnPercepcion.setViewportView(pnlPercepcion);

    tbbdDetalle.addTab("Percepcion", spnPercepcion);

    btnAgregar.setIcon(FontIcon.of(RemixiconAL.INSERT_ROW_BOTTOM, 16, Color.decode("#FFFFFF")));
    btnAgregar.setText("Agregar");
    btnAgregar.setEnabled(false);
    btnAgregar.setMinimumSize(new Dimension(150, 30));
    btnAgregar.setName(""); // NOI18N
    btnAgregar.setPreferredSize(new Dimension(150, 30));

    btnEliminar.setIcon(FontIcon.of(RemixiconAL.DELETE_ROW, 16, Color.decode("#FFFFFF")));
    btnEliminar.setText("Eliminar");
    btnEliminar.setEnabled(false);
    btnEliminar.setMinimumSize(new Dimension(150, 30));
    btnEliminar.setPreferredSize(new Dimension(150, 30));

    spane.setEnabled(false);
    spane.setMaximumSize(null);
    spane.setPreferredSize(new Dimension(150, 100));

    table.setModel(new DefaultTableModel(
        new Object [][] {

        },
        new String [] {

        }
    ));
    table.setAutoResizeMode(JTable.AUTO_RESIZE_OFF);
    table.setColumnSelectionAllowed(true);
    table.setName(""); // NOI18N
    table.getTableHeader().setReorderingAllowed(false);
    spane.setViewportView(table);
    table.getColumnModel().getSelectionModel().setSelectionMode(ListSelectionModel.SINGLE_SELECTION);

        GroupLayout pnlDetalleLayout = new GroupLayout(pnlDetalle);
    pnlDetalle.setLayout(pnlDetalleLayout);
    pnlDetalleLayout.setHorizontalGroup(pnlDetalleLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(pnlDetalleLayout.createSequentialGroup()
            .addContainerGap()
            .addGroup(pnlDetalleLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addComponent(spane, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tbbdDetalle, GroupLayout.Alignment.TRAILING)
                .addComponent(cbxEstado, GroupLayout.Alignment.TRAILING, 0, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(pnlDetalleLayout.createSequentialGroup()
                    .addComponent(btnAgregar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnEliminar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addComponent(lblEstado))
            .addContainerGap())
    );
    pnlDetalleLayout.setVerticalGroup(pnlDetalleLayout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(pnlDetalleLayout.createSequentialGroup()
            .addContainerGap()
            .addComponent(lblEstado)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(cbxEstado, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(tbbdDetalle, GroupLayout.PREFERRED_SIZE, 301, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.UNRELATED)
            .addGroup(pnlDetalleLayout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(btnEliminar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(btnAgregar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(spane, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addContainerGap())
    );

    cbxEstado.setSelectedIndex(-1);
    tbbdDetalle.setEnabledAt(1, false);
    tbbdDetalle.setEnabledAt(2, false);
    tbbdDetalle.setEnabledAt(4, false);

    tabbed.addTab("Detalle", FontIcon.of(RemixiconAL.LIST_ORDERED, 16, Color.decode("#FFFFFF")), pnlDetalle, "");

    separator.setMaximumSize(null);
    separator.setMinimumSize(null);
    separator.setPreferredSize(new Dimension(5, 5));

    btnNuevo.setIcon(FontIcon.of(RemixiconAL.ADD_LINE, 16, Color.decode("#FFFFFF")));
    btnNuevo.setText("Nuevo");
    btnNuevo.setMinimumSize(new Dimension(150, 30));
    btnNuevo.setPreferredSize(new Dimension(150, 30));

    btnGuardar.setIcon(FontIcon.of(RemixiconMZ.SAVE_LINE, 16, Color.decode("#FFFFFF")));
    btnGuardar.setText("Guardar");
    btnGuardar.setEnabled(false);
    btnGuardar.setMinimumSize(new Dimension(150, 30));
    btnGuardar.setPreferredSize(new Dimension(150, 30));

    btnLimpiar.setIcon(FontIcon.of(RemixiconAL.ERASER_LINE, 16, Color.decode("#FFFFFF")));
    btnLimpiar.setText("Limpiar");
    btnLimpiar.setEnabled(false);
    btnLimpiar.setMinimumSize(new Dimension(150, 30));
    btnLimpiar.setPreferredSize(new Dimension(150, 30));

        GroupLayout layout = new GroupLayout(getContentPane());
    getContentPane().setLayout(layout);
    layout.setHorizontalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(layout.createSequentialGroup()
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addComponent(btnNuevo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnGuardar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                    .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
                    .addComponent(btnLimpiar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
                .addComponent(separator, GroupLayout.Alignment.TRAILING, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(tabbed, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addContainerGap(GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
    );
    layout.setVerticalGroup(layout.createParallelGroup(GroupLayout.Alignment.LEADING)
        .addGroup(GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
            .addContainerGap()
            .addComponent(tabbed, GroupLayout.DEFAULT_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addComponent(separator, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
            .addPreferredGap(LayoutStyle.ComponentPlacement.RELATED)
            .addGroup(layout.createParallelGroup(GroupLayout.Alignment.BASELINE)
                .addComponent(btnGuardar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(btnLimpiar, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE)
                .addComponent(btnNuevo, GroupLayout.PREFERRED_SIZE, GroupLayout.DEFAULT_SIZE, GroupLayout.PREFERRED_SIZE))
            .addContainerGap())
    );

    pack();
    }// </editor-fold>//GEN-END:initComponents

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public JButton btnAgregar;
    public JButton btnEliminar;
    public JButton btnGuardar;
    public JButton btnLimpiar;
    public JButton btnNuevo;
    public JComboBox<String> cbxDocumentoIdentidadTipo;
    public JComboBox<String> cbxDocumentoReferenciaTipo;
    public JComboBox<String> cbxDocumentoTipo;
    public JComboBox<String> cbxEstado;
    public JComboBox<String> cbxMoneda;
    public JComboBox<String> cbxPercepcionRegimen;
    public JComboBox<String> cbxTipo;
    public JCheckBox chckPercepcion;
    public JXDatePicker dpFechaEmision;
    public JXDatePicker dpFechaGeneracion;
    public JLabel lblBolsasPlasticas;
    public JLabel lblCorrelativo;
    public JLabel lblDocumentoCorrelativo;
    public JLabel lblDocumentoIdentidadNumero;
    public JLabel lblDocumentoIdentidadTipo;
    public JLabel lblDocumentoSerie;
    public JLabel lblDocumentoTipo;
    public JLabel lblEstado;
    public JLabel lblExoneradas;
    public JLabel lblExportacion;
    public JLabel lblFechaEmision;
    public JLabel lblFechaGeneracion;
    public JLabel lblGratuitas;
    public JLabel lblGravadas;
    public JLabel lblIgv;
    public JLabel lblImporteTotal;
    public JLabel lblInafectas;
    public JLabel lblIsc;
    public JLabel lblMoneda;
    public JLabel lblOtrosCargos;
    public JLabel lblOtrosTributos;
    public JLabel lblPercepcionBase;
    public JLabel lblPercepcionMonto;
    public JLabel lblPercepcionMontoTotal;
    public JLabel lblPercepcionRegimen;
    public JLabel lblPercepcionTasa;
    public JLabel lblReferenciaCorrelativo;
    public JLabel lblReferenciaSerie;
    public JLabel lblReferenciaTipo;
    public JLabel lblSerie;
    public JLabel lblTipo;
    public JPanel pnlDetalle;
    public JPanel pnlDocumento;
    public JPanel pnlEncabezado;
    public JPanel pnlImportes;
    public JPanel pnlPercepcion;
    public JPanel pnlReferencia;
    public JPanel pnlRemitente;
    public JSeparator separator;
    public JScrollPane spane;
    public JScrollPane spnImportes;
    public JScrollPane spnPercepcion;
    public JTabbedPane tabbed;
    public JTable table;
    public JTabbedPane tbbdDetalle;
    public JFormattedTextField tfBolsasPlasticas;
    public JTextField tfCorrelativo;
    public JTextField tfDocumentoCorrelativo;
    public JTextField tfDocumentoIdentidadNumero;
    public JTextField tfDocumentoReferenciaCorrelativo;
    public JTextField tfDocumentoReferenciaSerie;
    public JTextField tfDocumentoSerie;
    public JFormattedTextField tfExoneradas;
    public JFormattedTextField tfExportacion;
    public JFormattedTextField tfGratuitas;
    public JFormattedTextField tfGravadas;
    public JFormattedTextField tfIgv;
    public JFormattedTextField tfImporteTotal;
    public JFormattedTextField tfInafectas;
    public JFormattedTextField tfIsc;
    public JFormattedTextField tfOtrosCargos;
    public JFormattedTextField tfOtrosTributos;
    public JFormattedTextField tfPercepcionBase;
    public JFormattedTextField tfPercepcionMonto;
    public JFormattedTextField tfPercepcionMontoTotal;
    public JFormattedTextField tfPercepcionTasa;
    public JTextField tfSerie;
    // End of variables declaration//GEN-END:variables
}
